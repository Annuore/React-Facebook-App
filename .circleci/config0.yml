# version: 2.1

# workflows:
#  ci-deploy:  # name of workflow
#   jobs:
#     - test 
# jobs: 
#  test: # name of the job that I wanna run
#   docker: # the exectutor. It could also be a vm
#    - image: cimg/node:18.3.0
#   steps:
#     - checkout
#     - run: 
#        name: Install dependencies
#        command: npm install 
#     - run:
#        name: Start app
#        command: npm run test 


# version: 2.1
# jobs:
#   # running commands on a basic image
#   Hello-World:
#     docker:
#       - image: cimg/base:2021.04
#     steps:
#       - run:
#           name: Saying Hello
#           command: |
#             echo 'Hello World!'
#             echo 'This is the delivery pipeline'
#   # fetching code from the repo
#   Fetch-Code:
#     docker:
#       - image: cimg/base:2021.04
#     steps:
#       - checkout
#       - run:
#           name: Getting the Code
#           command: |
#             ls -al
#             echo '^^^Your repo files^^^'
#   # running a node container
#   Using-Node:
#     docker:
#       - image: cimg/node:17.2
#     steps:
#       - run:
#           name: Running the Node Container
#           command: |
#             node -v
#   Now-Complete:
#     docker:
#       - image: alpine:3.15
#     steps:
#       - run:
#           name: Approval Complete
#           command: |
#             echo 'The work is now complete.'
# workflows:
#   Example-Workflow:
#     jobs:
#       - Hello-World
#       - Fetch-Code:
#           requires:
#             - Hello-World
#       - Using-Node:
#           requires:
#             - Fetch-Code
#       - Hold-for-Approval:
#           type: approval
#           requires:
#             - Using-Node
#             - Fetch-Code
#       - Now-Complete:
#           requires:
#             - Hold-for-Approval

########### Adding Environmental Variables ##########
# version: 2.1

# workflows:
#   test-env-vars:
#     jobs:
#       - build

# jobs:
#   build:
#     docker:
#       - image: cimg/base:2021.11
#         auth:
#           username: annuore
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#     steps:
#       - checkout
#       - run:
#           name: "echo an env var that is part of our project"
#           command: |
#             echo $MY_ENV_VAR # this env var must be set within the project


version: 2.1

executors:
  my-executor:
    docker:
      - image: buildpack-deps:jessie
        auth:
          username: annuore
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    working_directory: /tmp

jobs:
  flow:
    executor: my-executor
    steps:
      - run: mkdir -p workspace
      - run: echo "Hello, world!" > workspace/echo-output

      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - echo-output

  downstream:
    executor: my-executor
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - run: |
          if [[ `cat /tmp/workspace/echo-output` == "Hello, world!" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi

workflows:
  btd:
    jobs:
      - flow
      - downstream:
          requires:
            - flow

